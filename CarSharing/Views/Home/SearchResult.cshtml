@model IEnumerable<CarSharing.car>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Search Result";
}

<body>
    <div class="table">
        <div class="row">
            @using (Html.BeginForm("SearchResult", "Home", FormMethod.Get))
            {
                <div class="row">
                    <div class="searchSection">
                        <b>Pickup</b>
                        @{var pickupDateTime = DateTime.Today.AddDays(1.5);}
                        <div class="row">
                            <div class="cell"><input type="search" id="pickupLocation" name="pickupLocation" placeholder="pickup location" value="@ViewBag.searchStr" autofocus required /></div>
                        </div>
                        <div class="row">
                            <div class="cell"><input type="date" id="pickupDate" name="pickupDate" value="@pickupDateTime.ToString("yyyy-MM-dd")" required /></div>
                            <div class="cell"><input type="time" id="pickupTime" name="pickupTime" value="@pickupDateTime.ToString("HH:mm")" /></div>
                        </div>
                    </div>
                    <div class="searchSection">
                        <b>Return</b>
                        @{var returnDateTime = pickupDateTime.AddDays(1.25);}
                        <div class="row">
                            <div class="cell"><input type="search" id="returnLocation" name="returnLocation" placeholder="return location" /></div>
                        </div>
                        <div class="row">
                            <div class="cell"><input type="date" id="returnDate" name="returnDate" value="@returnDateTime.ToString("yyyy-MM-dd")" /></div>
                            <div class="cell"><input type="time" id="returnTime" name="returnTime" value="@returnDateTime.ToString("HH:mm")" /></div>
                        </div>
                    </div>
                    <div class="cell" style="margin: 0px;">
                        <input type="submit" value="Search" style="height: 102px;" />
                    </div>
                </div>
            }
        </div>
        <hr />
        <div class="row">
            <div class="cell">
                <div id="map-canvas"></div>
            </div>
            <div class="cell">
                @for (var i = 0; i < Model.Count(); i++)
                {
                    var item = Model.ElementAt(i);
                    if (item.parking_pos != null){
                        <div class="result">
                            <div class="row"><div class="cell">
                                @item.name
                            </div></div>   
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</body>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script>
    var geocoder;
    var map;

    // array with car-information
    var cars = [
        @for (var i = 0; i < Model.Count(); i++ )
        {
            var item = Model.ElementAt(i);
            if (item.parking_pos != null)
            {
                @Html.Raw("            ['");
                @Html.Raw(item.name);
                @Html.Raw("', ");
                @Html.Raw(item.parking_pos);
                @Html.Raw(", ");
                @Html.Raw(i);
                if (i == (Model.Count()-1))
                    { @Html.Raw("]\r\n"); }
                else
                    { @Html.Raw("],\r\n"); }
            }
        }
    ];

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(51.000, 10.500);
        var mapOptions = {
            zoom: 6,
            center: latlng
        }
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        setMarkers(map, cars);

        codeAddress();
    }

    function setMarkers(map, locations) {
        for (var i = 0; i < locations.length; i++) {
            var location = locations[i];
            var myLatLng = new google.maps.LatLng(location[1], location[2]);
            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                //icon: image,
                //shape: shape,
                title: location[0],
                zIndex: location[3]
            });
        }
    }

    function codeAddress() {
        var searchFlag = '../../Images/searchFlag.png';
        var address = document.getElementById('pickupLocation').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                map.setZoom(12);
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location,
                    title: address,
                    icon: searchFlag
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>